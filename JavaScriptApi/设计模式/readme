设计模式原则，设计模式存在的根本原因是为了代码复用，增加可维护性。
1、开闭原则：对扩展开发，对修改关闭 ( 举例：高考试卷，只能添加附加题，而不能修改原来的卷子 )
2、里氏转换原则：子类继承父类，单独调用完全可以运行 ( 举例：盗版光盘 )
3、依赖倒转原则：引用一个对象，如果这个对象有底层类型，直接引用底层 ( 举例：三个和尚打水，直接可以从井里打水，然后搬回家，并不是把水都打出来
   放到一个桶里，在搬回家，这是不科学的)
4、接口隔离原则：每一个接口应该是一种角色 ( 举例：汽车里面的USB接口 )
5、合成/聚合复用原则：新的对象应使用一些已有的对象，使之成为新对象的一部分 ( 举例：手里有一些相机零件，而又去买了新的相机 )
6、迪米特原则：一个对象应对其他对象有尽可能少的了解  ( 举例：现实中的对象 )

工厂模式的概念解读
工厂模式定义一个用于创建对象的接口，这个接口由子类决定实例化哪一个类。该模式使一个类的实例化延迟到了子类。而子类可以重写接口方法以便创建的
时候指定自己的对象类型( 抽象工厂 )。
这个模式十分有用，尤其是创建对象的流程赋值的时候，比如依赖于很多设置文件等。并且你会经常在程序里看到工厂方法，用于让子类定义需要创建的对象类型。

模式作用：
1、对象的构建十分复杂
2、需要依赖具体的环境创建不同的实例
3、处理大量具有相同属性的小对象